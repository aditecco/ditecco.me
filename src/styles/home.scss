/* ---------------------------------
home.scss
--------------------------------- */

@import "_dtc-logic";

/* ---------------------------------
common
--------------------------------- */

* {
  box-sizing: border-box;
}

body {
  font-family: "Roboto", sans-serif;
  font-weight: 400;
  text-align: center;
  color: $utility-dark-gray;
  background-color: $background-bright-03;
}

.Home {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: "Montserrat", sans-serif;
    font-weight: 400;
  }

  h1 {
    font-size: 2.4em;
  }

  h2 {
    font-size: 2em;
    margin: 0.8em 0;
  }

  h3 {
    font-size: 1.6em;
  }

  a {
    border-bottom: 1px solid $accent-bright;
    color: inherit;
    text-decoration: none;
    &:hover {
      color: black;
      border-bottom: 2px solid $accent-bright;
      background-color: rgba($accent-bright, 0.1);
    }
  }

  ::selection {
    background: $accent-bright;
    color: $utility-dim-white;
  }

  /* ---------------------------------
  .card-list-container & .card-list
  --------------------------------- */

  .card-list-container {
    max-width: calcContWidth(3);
    margin: 20px auto 40px;
    @media (max-width: 996px) {
      width: calcContWidth(2);
    }
    @media (max-width: 660px) {
      width: calcContWidth(1);
    }
    @media (max-width: 340px) {
      width: 320px;
    }
  }

  .card-list {
    display: grid;
    grid-template-columns: repeat(auto-fill, 300px);
    grid-auto-rows: 200px;
    grid-gap: 20px;
    @include setBox(0 20px, 0, true);
    @media (max-width: 340px) {
      padding: 0 10px;
    }
    .card-list-item {
      border-radius: 4px;
      border-bottom: 4px solid rgba($clouds, 0.99);
      text-align: left;
      color: rgba($utility-dark-gray, 0.95);
      box-shadow: 0 2px 4px rgba(#777, 0.15);
      background-color: white;
      transition: all 0.5s ease;
      &:hover {
        border-bottom: 4px solid $accent-bright;
        transform: translateY(10px);
      }
      article {
        height: 100%;
      }
      .card-list-item-body {
        @include setFlexbox(column nowrap, space-evenly, flex-start);
        height: 100%;
        padding: 0 20px;
        & > * {
          margin: 0;
        }
        h3 {
          color: black;
        }
        h5 {
          color: $silver;
          text-transform: uppercase;
        }
      }
      &.card-list-item--2rows {
        grid-row-end: span 2;
        .card-list-item-hero,
        .card-list-item-body {
          height: 50%;
        }
        .card-list-item-hero {
          border-top-left-radius: 4px;
          border-top-right-radius: 4px;
          background-color: $utility-light-gray;
          overflow: hidden;
          img {
            filter: brightness(102%);
          }
        }
      }
      &.card-list-item--3rows {
        grid-row-end: span 3;
      }
    }
  }

  /* ---------------------------------
  fallbacks
  --------------------------------- */

  @supports not (display: grid) {
    .card-list {
      @include setFlexbox(row wrap, flex-start, flex-start);
      .card-list-item {
        width: 300px;
        height: 200px;
        margin: 0 20px 20px 0;
        &:nth-child(3n) {
          margin-right: 0;
        }
        &.card-list-item--2rows {
          // for compat
          height: 400px;
          height: calc(200px * 2);
        }
        &.card-list-item--3rows {
          // for compat
          height: 600px;
          height: calc(200px * 3);
        }
        @media (max-width: 996px) {
          // find a better way for :162
          &:nth-child(3) {
            margin-right: 20px;
          }
          &:nth-child(2n) {
            margin-right: 0;
          }
        }
        @media (max-width: 660px) {
          // selects all elems
          // must use pseudo-sel for specificity,
          // otherwise would be overwritten by :162
          &:nth-child(n) {
            margin-right: 0;
          }
        }
      }
    }
  }

  /* ---------------------------------
  .card-list-item-tag
  --------------------------------- */

  .card-list-item-tag {
    padding: 0.2em 1em;
    border: 2px solid $silver;
    border-radius: 20px;
    font-family: "Montserrat", sans-serif;
    font-weight: 400;
    font-size: 0.9em;
    letter-spacing: 0.025em;
    text-transform: uppercase;
    color: $silver;
    // try to name all colors
    &.card-list-item-tag--featured {
      color: #470ff4;
      border: 2px solid #470ff4;
    }
    &.card-list-item-tag--archived {
      color: $deepPurple;
      border: 2px solid $deepPurple;
    }
  }

  /* ---------------------------------
  .card-list-item--master
  --------------------------------- */

  .card-list-item.card-list-item--master {
    &:hover {
      // is there a more elegant way to override hover borders?
      border-bottom: 4px solid rgba($clouds, 0.99);
      transform: none;
    }
    article {
      @include setFlexbox(column nowrap, center, center);
      a {
        padding: 1px 2px;
      }
      & > * {
        width: 100%;
      }
      & > *:not(.card-list-item-hero) {
        padding: 20px;
      }
    }
    .card-list-item-hero {
      padding: 40px 20px;
      border-top-left-radius: 4px;
      border-top-right-radius: 4px;
      background: linear-gradient(to bottom, transparent, 30%, rgba(black, 0.8)),
        url("/img/adt-hero.jpg") center center no-repeat, $gunMetal;
      background-size: 140% auto;
      h2 {
        margin: 0;
        color: $utility-dim-white;
      }
    }
    .card-list-item-body {
      // nested flexbox, see @114
      flex-grow: 1;
      p {
        margin: 0;
        line-height: 1.8;
      }
    }
    .card-list-item-footer {
      @include setBorder(1px, solid, rgba($clouds, 0.99), top);
      h6 {
        margin: 0 0 10px;
        font-size: 12px;
        color: $font-color-secondary;
      }
      .contact-list {
        @include setFlexbox(row nowrap, space-evenly, center);
        @include setBox(0, 0, true);
      }
    }
  }

  /* ---------------------------------
  footer
  --------------------------------- */

  footer {
    padding: 0 20px 20px;
    color: $font-color-dark;
    text-align: center;

    a {
      @extend %resetAnchors;
      color: inherit;
      border-bottom: 1px dotted $utility-dark-gray;

      &:hover {
        color: $utility-dark-gray;

        border-bottom-style: solid;
      }
    }
  }
}
