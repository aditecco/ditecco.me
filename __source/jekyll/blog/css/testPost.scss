---
# Front matter is needed in main files for SCSS > CSS conversion!
---

/* ========================
testPost.scss
======================== */


/* ---------------------------------

imports
--------------------------------- */

@import '_normalize';
@import '_flat-ui-colors';


/* ---------------------------------
vars, functions, mixins, other
--------------------------------- */

// color vars
// $accent-primary: ;
// $accent-secondary: ;
// $background-primary: ;
// $background-secondary: ;
// $cta-primary: ;
// $cta-secondary: ;


// typography vars
$heading-font: 'Trocchi', sans-serif;
$base-font: 'Karla', sans-serif;
$system-font: 'Helvetica, Arial', sans-serif;
$font-color-dark: $gunMetal;
$font-color-bright: $paper;
$font-color-secondary: $silver;


// functions
@function emCalc($target, $context: 10) {
	// as seen on: https://stackoverflow.com/questions/13905407/append-unit-type-to-the-result-of-a-calculation
	@return ($target / $context) * 1em;
}

// reset margin and padding
// + border?
@mixin resetBox($pad: 0, $mar: 0, $isList: false) {
	padding: $pad;
	margin: $mar;
	@if $isList {
		list-style: none;
	}
}

// set font properties
// add line-height
@mixin setFonts($size, $family: $base-font, $color: $font-color-primary, $weight: 400) {
	font-family: $family;
	font-weight: $weight;
	font-size: emCalc($size);
	color: $color;
}

// set flexbox properties
@mixin setFlexbox($flow, $justify, $align) {
	display: flex;
	flex-flow: $flow;
	justify-content: $justify;
	align-items: $align;
}

// debugging
$debugMode: false;

* {
	@if $debugMode { outline: 1px solid $purple; }
}


/* ---------------------------------
common
--------------------------------- */

// setting `border-box`
* { box-sizing: border-box; }

// setting the global `font-size` at 10px
// for em calculations in base 10
body {
	font-size: 62.5%;
	// already defined in the setFonts mixin
	// color: $font-color-primary;
}

// body {
// 	display: flex;
// 	flex-flow: column nowrap;
// 	min-height: 100vh;
// }

// main {flex: 1;}


/* ---------------------------------
rules
--------------------------------- */

.container {
	padding: emCalc(20);
}

.blog-post-nav {
	background-color: $asphalt;
	ul { @include resetBox(1em, 0, true); }
}

// .blog-post
.blog-post {
	.blog-post-header {
		position: relative;
		height: emCalc(280);
		overflow: hidden;
		.blog-post-header-text {
			position: absolute;
			// necessary?
			top: 0;
			left: 0;
			@include setFlexbox(column nowrap, center, flex-start);
			height: 100%;
			padding: emCalc(20);
			color: $paper;
			background-color: rgba(black, .15);
			.blog-post-title,
			.blog-post-subtitle,
			.blog-post-timestamp { margin: 0; }
			.blog-post-title {
				// is this override necessary?
				flex-grow: 1;
				margin-bottom: emCalc(5);
				@include setFonts(32, $heading-font, $font-color-bright);
			}
			.blog-post-subtitle {}
			// include in .blog-post-meta?
			.blog-post-timestamp {
				@include setFonts((16 * 0.8), $system-font, $font-color-secondary);
			}
			.blog-post-meta {
				@include setFlexbox(row nowrap, flex-start, center);
				width: 100%;
				@include resetBox;
				list-style: none;
				@include setFonts((16 * 0.8), $system-font, $font-color-secondary);
				// can we manage spacing via flexbox?
				li {
					margin-right: 10px;
					} &:last-child { margin-right: 0; }
			}
		}
		.blog-post-header-img {
			min-height: 100%;
			width: auto;
		}
	}
	.blog-post-body {
		padding: emCalc(10) emCalc(20);
		@include setFonts((16), $base-font, $font-color-dark);
	}
	.blog-post-footer {}
}






































